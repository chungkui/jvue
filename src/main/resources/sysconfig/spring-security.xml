<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security.xsd">

    <http pattern="/resources/css/**" security="none"/>
    <http pattern="/resources/images/**" security="none"/>
    <http pattern="/resources/js/**" security="none"/>
    <http pattern="/login.jsp" security="none"/>
    <http pattern="/upms/login/dispatch" security="none"/>
    <http pattern="/upms/login/success" security="none"/>
    <http use-expressions="false">

        <!-- 登录入口不需要控制权限 -->
        <intercept-url pattern="/upms/login/dispatch" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <!-- 访问其他所有页面都需要有USER权限 -->
        <!--<intercept-url pattern="/**" access="ROLE_USER"/>-->
        <!-- 配置登录页面地址login-page、登录失败后的跳转地址authentication-failure-url -->
        <!--jason登陆页面，登陆入口，登陆失败返回，登陆成功默认进入地址，-->
        <form-login login-page='/upms/login/dispatch'
                    login-processing-url="/login"
                    authentication-failure-url='/login.jsp?error'
                    default-target-url="/upms/login/success"
                    always-use-default-target="true"/>
        <!--前后端分离这一项很重要，防止s授权成功后pring返回认证之前的资源导致登陆失败-->
        <!--注销成功加载地址-->
        <logout logout-url="/logout" logout-success-url="/upms/login/dispatch"/>
        <!-- 登出功能 -->
       <!-- <cors configuration-source-ref=""></cors>-->

        <csrf disabled="true"/>
        <custom-filter before="FILTER_SECURITY_INTERCEPTOR"
                       ref="filterSecurityInterceptor"/>
    </http>
    <!--不用拦截的地址-->






    <beans:bean id="filterSecurityInterceptor" class="org.jvue.security.JvFilterSecurityInterceptor">
        <beans:property name="authenticationManager" ref="authenticationManager"/>
        <beans:property name="accessDecisionManager" ref="accessDecisionManager"/>
        <beans:property name="securityMetadataSource" ref="securityMetadataSource"/>
    </beans:bean>
    <!--提供授权库-->
    <authentication-manager alias="authenticationManager">
        <authentication-provider user-service-ref="userDetailsService">
            <!--<password-encoder ref="passwordEncoder"/>-->
        </authentication-provider>
    </authentication-manager>
    <!--认证管理器-->
    <beans:bean id="accessDecisionManager" class="org.jvue.security.JvAccessDecisionManager">

    </beans:bean>
    <!--提供权限库-->
    <beans:bean id="securityMetadataSource" class=" org.jvue.security.JvSecurityMetadataSource">

    </beans:bean>

    <beans:bean id="userDetailsService" class="org.jvue.security.JvUserDetailServiceImpl"/>
    <beans:bean id="passwordEncoder" class="org.jvue.security.JvPasswordEncoderImpl"/>

    <!--控制注解类型的-->

    <!--基于url不好实现通过方法控制-->

    <!--
        <beans:bean id="handlerMapping" name="handlerMapping" class="org.jvue.security.JvDefaultAnnotationHandlerMapping">
             <beans:property name="interceptors">
                <beans:list>

                </beans:list>
            </beans:property>
        </beans:bean>-->
    <!--<beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <headers>
            <header ref="handlerMapping"></header>
        </headers>

    </beans:bean>-->
</beans:beans>